<!-- views/orden/crear.ejs -->
<%- include('../partials/header', { title: 'Crear Orden de Compra' }) %>
<%- include('../partials/navbar', { navbarText: 'Creando OC para solicitud: "' + solicitud.asunto + '"' }) %>
<%- include('../partials/sidebar') %>
<%- include('../partials/content-wrapper-open') %>

<style>
  .total-row th {
    font-size: 1.5em;
    background-color: #f8f9fa;
    color: #212529;
    padding-top: 1em;
    padding-bottom: 1em;
  }

  .impuesto-row td,
  .retencion-row td,
  .propina-row td {
    font-weight: 500;
  }

  .table-sm td, .table-sm th {
    vertical-align: middle;
  }

  .impuesto-row, .retencion-row, .propina-row {
    transition: all 0.3s ease-in-out;
  }

  .impuesto-row.hide,
  .retencion-row.hide,
  .propina-row.hide {
    display: none;
  }

  .impuesto-row.show,
  .retencion-row.show,
  .propina-row.show {
    display: table-row;
  }

  .moneda-symbol {
    font-weight: bold;
  }

  .btn-fixed-width {
    width: 150px;
    text-align: center;
    white-space: nowrap;
  }

  @media (max-width: 576px) {
    .btn-fixed-width {
      width: 100%;
      margin-bottom: 5px;
    }

    .btn-group-actions {
      display: flex;
      flex-direction: column;
      width: 100%;
    }
  }

  .list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: background-color 0.3s;
  }

  .list-group-item:hover {
    background-color: #f8f9fa;
  }

  .file-info {
    display: flex;
    align-items: center;
  }

  .file-info i {
    font-size: 1.5rem;
    margin-right: 10px;
  }

  .btn-group-actions button,
  .btn-group-actions a {
    margin-left: 5px;
  }

  #file-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  #file-list li .btn-danger {
    margin-left: 10px;
  }
</style>

<div class="content-wrapper">
  <div class="container-xxl flex-grow-1 container-p-y">
    <div class="app-orden-compra">
      <div class="card my-1" style="background: radial-gradient(circle, #b30000, #ff4d4d); text-align: center;">
        <div class="card-body p-2">
          <h6 class="mb-0" style="color: #fff;">DATOS</h6>
        </div>
      </div>

      <% if (errorMessage && errorMessage.length > 0) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= errorMessage %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
        </div>
      <% } %>

      <form action="/ordenes-crear/<%= solicitud.id %>" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate>
        <div class="row">

          <!-- Proveedor -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-proveedor">Proveedor <span class="text-danger">*</span></label>
            <select id="orden-proveedor" class="form-select select2" name="id_proveedor" required>
              <option value="">Seleccione un proveedor</option>
              <% proveedores.forEach(proveedor => { %>
                <option value="<%= proveedor.id_proveedor %>"><%= proveedor.nombre_proveedor %></option>
              <% }); %>
            </select>
          </div>

          <!-- Banco -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-banco">Banco <span class="text-danger">*</span></label>
            <select id="orden-banco" class="form-select select2" name="id_banco" required disabled>
              <option value="">Seleccione un banco</option>
            </select>
          </div>

          <!-- Plazo de Pago -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-plazo">Plazo de Pago <span class="text-danger">*</span></label>
            <select id="orden-plazo" class="form-select select2" name="id_plazoPago" required>
              <option value="">Seleccione plazo de pago</option>
              <% plazosdepago.forEach(plazo => { %>
                <option value="<%= plazo.id_forma_pago %>"><%= plazo.nombre %></option>
              <% }); %>
            </select>
          </div>

          <!-- Empresa -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-empresa">Empresa <span class="text-danger">*</span></label>
            <select id="orden-empresa" class="form-select select2" name="id_empresa" required>
              <option value="">Seleccione una empresa</option>
              <% empresas.forEach(empresa => { %>
                <option value="<%= empresa.id_empresa %>"><%= empresa.nombre %></option>
              <% }); %>
            </select>
          </div>

          <!-- Centro de Costo -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-centro-costo">Centro de Costo <span class="text-danger">*</span></label>
            <select id="orden-centro-costo" class="form-select select2" name="id_centroCosto" required>
              <option value="">Seleccione un centro de costo</option>
              <% centrosdecosto.forEach(centro => { %>
                <option value="<%= centro.id_centro_costo %>"><%= centro.nombre %></option>
              <% }); %>
            </select>
          </div>

          <!-- Tipo de Orden -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-tipo">Tipo de Orden <span class="text-danger">*</span></label>
            <select id="orden-tipo" class="form-select select2" name="id_tipoOrden" required>
              <option value="">Seleccione un tipo de orden</option>
              <% tiposdeorden.forEach(tipo => { %>
                <option value="<%= tipo.id_tipo %>"><%= tipo.nombre %></option>
              <% }); %>
            </select>
          </div>

          <!-- Moneda -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-moneda">Moneda <span class="text-danger">*</span></label>
            <div class="input-group">
              <select id="orden-moneda" class="form-select select2" name="id_moneda" required>
                <option value="">Seleccione una moneda</option>
                <% monedas.forEach(moneda => { %>
                  <option value="<%= moneda.id_moneda %>" data-abrev="<%= moneda.abrev %>"><%= moneda.nombre %> (<%= moneda.abrev %>)</option>
                <% }); %>
              </select>
            </div>
          </div>

          <!-- Cuenta Contable -->
          <div class="col-md-3 mb-3">
            <label class="form-label" for="orden-cuenta-contable">Cuenta Contable <span class="text-danger">*</span></label>
            <select id="orden-cuenta-contable" class="form-select select2" name="id_cuentaContable" required>
              <option value="">Seleccione una cuenta contable</option>
              <% cuentascontables.forEach(cuenta => { %>
                <option value="<%= cuenta.id_cuenta %>"><%= cuenta.nombre_cuenta %> | <%= cuenta.codigo %></option>
              <% }); %>
            </select>
          </div>

          <!-- Subir Cotización -->
          <div class="col-md-6 mb-3">
            <label class="form-label" for="orden-archivos">Subir Cotización</label>
            <input
              type="file"
              class="form-control d-none"
              id="orden-archivos"
              name="cotizacion"
              accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png"
              multiple
              aria-label="Subir Archivos"
              onchange="handleFileSelect(this)"
            />
            <div class="mb-2">
              <small class="form-text text-muted">
                Formatos permitidos: PDF, DOC, DOCX, XLS, XLSX, PPT, PPTX, JPG, JPEG, PNG (máximo 10 archivos y 10 MB en total)
              </small>
            </div>
            <div class="mb-2">
              <button type="button" class="btn btn-outline-secondary" onclick="document.getElementById('orden-archivos').click()">
                <i class="fas fa-upload me-1"></i> Seleccionar archivos
              </button>
            </div>
            <ul id="file-list" class="list-group mt-2"></ul>
            <% if (solicitud.archivos && solicitud.archivos.length > 0) { %>
              <div class="mt-2">
                <a href="/solicitudes-ver-archivos/<%= solicitud.id %>" target="_blank">Ver archivos de la solicitud</a>
              </div>
            <% } %>
          </div>

          <!-- Nota -->
          <div class="col-md-6 mb-3">
            <label class="form-label" for="orden-nota">Nota</label>
            <textarea class="form-control" id="orden-nota" name="Nota" rows="3" style="resize: none; background-color: #fff;" placeholder="Escribe una nota aquí..."><%= solicitud.descripcion || '' %></textarea>
          </div>
        </div>

        <div class="card my-1" style="background: radial-gradient(circle, #b30000, #ff4d4d); text-align: center;">
          <div class="card-body p-2">
            <h6 class="mb-0" style="color: #fff;">DETALLE</h6>
          </div>
        </div>

        <!-- Dropdown Producto y Botón Agregar Producto -->
        <div class="row mb-4">
          <div class="col-md-9">
            <label class="form-label" for="producto">Producto</label>
            <select id="producto" class="form-select select2" name="Producto" style="width: 100%;" disabled>
              <option value="">Seleccione un producto</option>
              <% productos.forEach(producto => { %>
                <option value="<%= producto.id_producto %>" data-unidad="<%= producto.unidad %>"><%= producto.descripcion %></option>
              <% }); %>
            </select>
          </div>
          <div class="col-md-3 d-flex align-items-end">
            <button type="button" class="btn btn-primary w-100" id="add-producto" disabled>Agregar Producto</button>
          </div>
        </div>

        <!-- Tabla de Productos -->
        <div class="table-responsive mb-4">
          <table class="table table-bordered" id="productos-table">
            <colgroup>
              <col style="width: 50%;">
              <col style="width: 10%;">
              <col style="width: 20%;">
              <col style="width: 20%;">
              <col style="width: 5%;">
            </colgroup>
            <thead>
              <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Valor Unitario</th>
                <th>Valor Total</th>
                <th></th>
              </tr>
            </thead>
            <tbody id="productos-tbody">
            </tbody>
          </table>
        </div>

        <!-- Totales -->
        <div class="row">
          <div class="col-md-6 offset-md-6">
            <table class="table table-sm">
              <tbody>
                <tr>
                  <td>Sub-total:</td>
                  <td id="subtotal"><span class="moneda-symbol"></span></td>
                </tr>
                <tr class="impuesto-row hide">
                  <td id="impuesto-label">Impuesto:</td>
                  <td id="impuesto"><span class="moneda-symbol"></span></td>
                </tr>
                <tr class="retencion-row hide">
                  <td id="retencion-label">Retención:</td>
                  <td id="retencion"><span class="moneda-symbol"></span></td>
                </tr>
                <tr class="propina-row hide">
                  <td id="propina-label">Propina:</td>
                  <td id="propina"><span class="moneda-symbol"></span></td>
                </tr>
                <tr class="total-row">
                  <th>Total:</th>
                  <th id="total" style="font-size: 1.5em;"><span class="moneda-symbol"></span></th>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <input type="hidden" name="subtotal" id="hidden-subtotal">
        <input type="hidden" name="impuesto" id="hidden-impuesto">
        <input type="hidden" name="retencion" id="hidden-retencion">
        <input type="hidden" name="propina" id="hidden-propina">
        <input type="hidden" name="total" id="hidden-total">
        <input type="hidden" name="productos" id="hidden-productos">
        <input type="hidden" name="tokenDatos" value="<%= tokenDatos %>">

        <!-- Botones -->
        <div class="d-flex justify-content-end gap-4">
          <a href="/ordenes-cancelar-procesamiento/<%= solicitud.id %>" class="btn btn-secondary">Regresar</a>
          <button type="submit" class="btn btn-primary" id="submit-btn">Crear Orden</button>
        </div>
      </form>
    </div>
  </div>
</div>
<div class="content-backdrop fade"></div>
</div>

<script>
  $(document).ready(function() {
    $.fn.select2.defaults.set('language', 'es');

    $('.select2').select2({
      placeholder: 'Seleccione una opción',
      allowClear: true,
      width: '100%',
      matcher: function(params, data) {
        if (data.id === "") {
          return null;
        }
        if ($.trim(params.term) === "") {
          return data;
        }
        if (typeof data.text === 'undefined') {
          return null;
        }
        if (data.text.toLowerCase().indexOf(params.term.toLowerCase()) > -1) {
          var modifiedData = $.extend({}, data, true);
          return modifiedData;
        }
        return null;
      }
    });

    $('.select2').on('select2:open', function () {
      var selectElement = $(this);
      var labelText = selectElement.closest('.mb-3').find('label').text().toLowerCase();
      labelText = labelText.replace('*', '').trim();
      var searchField = $('.select2-container--open .select2-search__field');
      searchField.attr('placeholder', 'Buscar ' + labelText);
    });

    function updateSelect2($select) {
      $select.trigger('change.select2');
    }

    $('#producto').prop('disabled', true);
    $('#add-producto').prop('disabled', true);

    function checkDropdowns() {
      const requiredDropdowns = [
        '#orden-proveedor',
        '#orden-banco',
        '#orden-plazo',
        '#orden-empresa',
        '#orden-centro-costo',
        '#orden-tipo',
        '#orden-moneda',
        '#orden-cuenta-contable'
      ];

      let allSelected = true;
      for (let selector of requiredDropdowns) {
        if (!$(selector).val()) {
          allSelected = false;
          break;
        }
      }

      if (allSelected) {
        $('#producto').prop('disabled', false);
        updateSelect2($('#producto'));
      } else {
        $('#producto').prop('disabled', true);
        $('#producto').val(null).trigger('change.select2');
        $('#add-producto').prop('disabled', true);
        updateSelect2($('#producto'));
      }
    }

    $('#orden-proveedor, #orden-banco, #orden-plazo, #orden-empresa, #orden-centro-costo, #orden-tipo, #orden-moneda, #orden-cuenta-contable').on('change', checkDropdowns);

    $('#producto').on('change', function() {
      if ($(this).val()) {
        $('#add-producto').prop('disabled', false);
      } else {
        $('#add-producto').prop('disabled', true);
      }
    });

    $('#add-producto').on('click', function() {
      let productoId = $('#producto').val();
      let productoDesc = $('#producto option:selected').text();
      let productoUnidad = $('#producto option:selected').data('unidad');

      if (!productoId) {
        alert('Por favor, selecciona un producto.');
        return;
      }

      let existente = $('#productos-tbody tr').filter(function() {
        return $(this).data('producto-id') === productoId;
      }).length > 0;

      if (existente) {
        alert('El producto seleccionado ya ha sido agregado.');
        return;
      }

      let tr = $('<tr>')
        .attr('data-producto-id', productoId)
        .attr('data-unidad', productoUnidad)
        .html(`
          <td>${productoDesc}</td>
          <td>
            <input type="number" class="form-control cantidad" min="1" value="1" required>
          </td>
          <td>
            <div class="input-group">
              <span class="input-group-text moneda-symbol">${currentMonedaAbrev}</span>
              <input type="number" class="form-control valor-unitario" min="${useIntegers ? '0' : '0.01'}" step="${useIntegers ? '1' : '0.01'}" value="0.00" required>
            </div>
          </td>
          <td>
            <span class="moneda-symbol">${currentMonedaAbrev}</span>
            <span class="valor-total">0</span>
            <input type="hidden" class="valor-total-data" data-value="0">
          </td>
          <td>
            <button type="button" class="btn btn-danger btn-sm eliminar-producto">
              <i class="fas fa-trash-alt"></i>
            </button>
          </td>
        `);
      $('#productos-tbody').append(tr);
      calcularTotales();

      $('#producto').val(null).trigger('change.select2');
      $('#add-producto').prop('disabled', true);
    });

    let currentMonedaAbrev = '';
    let useIntegers = false;
    let appliedDetails = [];

    let selectedFiles = [];

    function formatNumber(number) {
      if (isNaN(number)) return '0';
      return new Intl.NumberFormat('es-CL', {
        minimumFractionDigits: useIntegers ? 0 : 2,
        maximumFractionDigits: useIntegers ? 0 : 2,
      }).format(number);
    }

    function updateMonedaSymbols() {
      $('.moneda-symbol').each(function() {
        $(this).text(currentMonedaAbrev ? currentMonedaAbrev + ' ' : '');
      });
    }

    function calcularTotales() {
      let subtotal = 0;
      $('#productos-tbody tr').each(function () {
        let valorTotalData = $(this).find('.valor-total-data').data('value');
        let valorTotal = parseFloat(valorTotalData);
        if (isNaN(valorTotal)) {
          valorTotal = 0;
        }
        subtotal += valorTotal;
      });
      let formattedSubtotal = formatNumber(subtotal, useIntegers);
      $('#subtotal').html(`<span class="moneda-symbol">${currentMonedaAbrev}</span> ${formattedSubtotal}`);

      $('#impuesto-label').text('Impuesto:').closest('.impuesto-row').addClass('hide');
      $('#retencion-label').text('Retención:').closest('.retencion-row').addClass('hide');
      $('#propina-label').text('Propina:').closest('.propina-row').addClass('hide');

      let impuesto = 0;
      let retencion = 0;
      let propina = 0;

      appliedDetails.forEach(detail => {
        let cantidad = parseFloat(detail.cantidad);
        if (isNaN(cantidad)) {
          cantidad = 0;
        }

        if (detail.nombre_detalle.toLowerCase() === 'impuesto') {
          if (detail.tipo_detalle === '%') {
            $('#impuesto-label').text(`Impuesto(${detail.cantidad}%) :`);
            impuesto += subtotal * (cantidad / 100);
          } else {
            $('#impuesto-label').text('Impuesto(fijo) :');
            impuesto += cantidad;
          }
          $('#impuesto-label').closest('.impuesto-row').removeClass('hide');
        } else if (detail.nombre_detalle.toLowerCase() === 'retencion') {
          if (detail.tipo_detalle === '%') {
            $('#retencion-label').text(`Retención(${detail.cantidad}%) :`);
            retencion += subtotal * (cantidad / 100);
          } else {
            $('#retencion-label').text('Retención(fijo) :');
            retencion += cantidad;
          }
          $('#retencion-label').closest('.retencion-row').removeClass('hide');
        } else if (detail.nombre_detalle.toLowerCase() === 'propina') {
          if (detail.tipo_detalle === '%') {
            $('#propina-label').text(`Propina(${detail.cantidad}%) :`);
            propina += subtotal * (cantidad / 100);
          } else {
            $('#propina-label').text('Propina(fijo) :');
            propina += cantidad;
          }
          $('#propina-label').closest('.propina-row').removeClass('hide');
        }
      });

      let formattedImpuesto = formatNumber(impuesto, useIntegers);
      $('#impuesto').html(`<span class="moneda-symbol">${currentMonedaAbrev}</span> ${formattedImpuesto}`);

      let formattedRetencion = formatNumber(retencion, useIntegers);
      $('#retencion').html(`<span class="moneda-symbol">${currentMonedaAbrev}</span> ${formattedRetencion}`);

      let formattedPropina = formatNumber(propina, useIntegers);
      $('#propina').html(`<span class="moneda-symbol">${currentMonedaAbrev}</span> ${formattedPropina}`);

      let total = subtotal + impuesto - retencion + propina;
      let formattedTotal = formatNumber(total, useIntegers);
      $('#total').html(`<span class="moneda-symbol">${currentMonedaAbrev}</span> ${formattedTotal}`);
    }

    function fetchDetallesTipoOrden(tipoOrdenId) {
      return $.ajax({
        url: `/api/tipos-orden/${tipoOrdenId}/detalles`,
        method: 'GET',
        dataType: 'json'
      });
    }

    $('#orden-proveedor').on('change', function() {
      var proveedorId = $(this).val();
      var $bancoSelect = $('#orden-banco');

      if (proveedorId) {
        $bancoSelect.prop('disabled', true).html('<option> Cargando bancos...</option>');
        updateSelect2($bancoSelect);

        $.ajax({
          url: `/api/proveedores/${proveedorId}/bancos`,
          method: 'GET',
          dataType: 'json',
          success: function(bancos) {
            $bancoSelect.empty();
            if (bancos.length > 0) {
              $bancoSelect.append('<option value="">Seleccione un banco</option>');
              bancos.forEach(function(banco) {
                $bancoSelect.append(`<option value="${banco.id_banco}">${banco.nombre_banco} | ${banco.tipo_cuenta} ${banco.numero_cuenta}</option>`);
              });
              $bancoSelect.prop('disabled', false);
            } else {
              $bancoSelect.append('<option value="no-bancos" disabled selected>No hay bancos para este proveedor</option>');
              $bancoSelect.prop('disabled', false);
            }
            updateSelect2($bancoSelect);
            checkDropdowns();
          },
          error: function(xhr, status, error) {
            console.error("Error al cargar bancos:", error);
            $bancoSelect.empty().append('<option value="">Error al cargar bancos</option>').prop('disabled', true);
            updateSelect2($bancoSelect);
            alert('Hubo un error al cargar los bancos. Por favor, intenta nuevamente.');
            checkDropdowns();
          }
        });
      } else {
        $bancoSelect.empty().append('<option value="">Seleccione un banco</option>').prop('disabled', true);
        updateSelect2($bancoSelect);
        checkDropdowns();
      }
    });

    $('#orden-banco').on('change', function() {
      checkDropdowns();
    });

    $('#orden-tipo').on('change', function() {
      let tipoOrdenId = $(this).val();
      appliedDetails = [];

      if (!tipoOrdenId) {
        calcularTotales();
        return;
      }

      fetchDetallesTipoOrden(tipoOrdenId)
        .done(function(data) {
          if (!Array.isArray(data)) {
            console.error('Datos de detalles tipo de orden no son una matriz:', data);
            alert('Datos de detalles tipo de orden inválidos.');
            appliedDetails = [];
            calcularTotales();
            return;
          }

          appliedDetails = data.map(detail => ({
            nombre_detalle: detail.nombre_detalle || '',
            cantidad: detail.cantidad ? parseFloat(detail.cantidad) : 0,
            tipo_detalle: detail.tipo_detalle || ''
          }));
          calcularTotales();
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
          console.error('Error al obtener detalles del tipo de orden:', errorThrown);
          alert('Hubo un error al obtener los detalles del tipo de orden. Por favor, intenta nuevamente.');
          appliedDetails = [];
          calcularTotales();
        });
    });

    $('#orden-moneda').on('change', function() {
      let selectedOption = $(this).find('option:selected');
      let abrev = selectedOption.data('abrev') || '';
      currentMonedaAbrev = abrev;
      useIntegers = (abrev === 'CLP$' || abrev === 'UF');
      updateMonedaSymbols();

      $('#productos-tbody tr').each(function() {
        let valorUnitarioAbrev = $(this).find('.valor-unitario').siblings('.moneda-symbol');
        let valorTotalAbrev = $(this).find('.valor-total').siblings('.moneda-symbol');

        if (valorUnitarioAbrev.length) {
          valorUnitarioAbrev.text(abrev);
          if (useIntegers) {
            $(this).find('.valor-unitario').attr('step', '1').attr('min', '0').val(Math.round($(this).find('.valor-unitario').val()));
          } else {
            $(this).find('.valor-unitario').attr('step', '0.01').attr('min', '0.01');
          }
        }

        if (valorTotalAbrev.length) {
          valorTotalAbrev.text(abrev);
        }
      });

      calcularTotales();
      checkDropdowns();
    });

    const initialMonedaOption = $('#orden-moneda').find('option:selected');
    if (initialMonedaOption.val()) {
      currentMonedaAbrev = initialMonedaOption.data('abrev') || '';
      useIntegers = (currentMonedaAbrev === 'CLP$' || currentMonedaAbrev === 'UF');
      updateMonedaSymbols();

      $('#productos-tbody tr').each(function() {
        let valorUnitarioAbrev = $(this).find('.valor-unitario').siblings('.moneda-symbol');
        let valorTotalAbrev = $(this).find('.valor-total').siblings('.moneda-symbol');

        if (valorUnitarioAbrev.length) {
          valorUnitarioAbrev.text(currentMonedaAbrev);
          if (useIntegers) {
            $(this).find('.valor-unitario').attr('step', '1').attr('min', '0').val(Math.round($(this).find('.valor-unitario').val()));
          } else {
            $(this).find('.valor-unitario').attr('step', '0.01').attr('min', '0.01');
          }
        }

        if (valorTotalAbrev.length) {
          valorTotalAbrev.text(currentMonedaAbrev);
        }
      });

      calcularTotales();
    }

    $('#productos-tbody').on('input', '.cantidad, .valor-unitario', function() {
      let tr = $(this).closest('tr');
      let cantidad = parseFloat(tr.find('.cantidad').val()) || 0;
      let valorUnitario = parseFloat(tr.find('.valor-unitario').val()) || 0;
      let valorTotal = cantidad * valorUnitario;
      let formattedValorTotal = formatNumber(valorTotal, useIntegers);

      tr.find('.valor-total').text(formattedValorTotal);
      tr.find('.valor-total-data').data('value', valorTotal.toFixed(useIntegers ? 0 : 2));

      calcularTotales();
    });

    $('#productos-tbody').on('click', '.eliminar-producto', function() {
      $(this).closest('tr').remove();
      calcularTotales();
    });

    window.handleFileSelect = function(input) {
      const files = Array.from(input.files);

      if ((selectedFiles.length + files.length) > 10) {
        alert('Máximo 10 archivos permitidos.');
        return;
      }

      let totalSize = selectedFiles.reduce((acc, file) => acc + file.size, 0);
      files.forEach(file => {
        totalSize += file.size;
      });
      if (totalSize > 10 * 1024 * 1024) {
        alert('El tamaño total de los archivos no debe exceder 10 MB.');
        return;
      }

      files.forEach(file => {
        if (!selectedFiles.some(f => f.name === file.name && f.size === file.size && f.lastModified === file.lastModified)) {
          selectedFiles.push(file);
        }
      });

      updateFileList();
      input.value = '';
    };

    function updateFileList() {
      const fileListEl = $('#file-list');
      fileListEl.empty();

      if (selectedFiles.length > 0) {
        $('#clear-files').show();
        selectedFiles.forEach((file, index) => {
          let li = $('<li>').addClass('list-group-item d-flex justify-content-between align-items-center');
          li.text(file.name + ' (' + formatBytes(file.size) + ')');
          let removeBtn = $('<button>')
            .addClass('btn btn-sm btn-danger')
            .attr('type', 'button')
            .attr('aria-label', 'Eliminar ' + file.name)
            .html('<i class="fas fa-trash-alt"></i>')
            .on('click', function() {
              removeFile(index);
            });
          li.append(removeBtn);
          fileListEl.append(li);
        });
      } else {
        $('#clear-files').hide();
      }
    }

    function removeFile(index) {
      selectedFiles.splice(index, 1);
      updateFileList();
    }

    function formatBytes(bytes, decimals = 2) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const dm = decimals < 0 ? 0 : decimals;
      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }

    let isSubmitting = false;
    $('#submit-btn').on('click', function (e) {
      if ($('#productos-tbody tr').length === 0) {
        alert('Por favor, agrega al menos un producto.');
        e.preventDefault();
        return;
      }

      const productos = [];
      $('#productos-tbody tr').each(function () {
        productos.push({
          id_producto: $(this).data('producto-id'),
          descripcion: $(this).find('td:nth-child(1)').text().trim(),
          cantidad: parseFloat($(this).find('.cantidad').val()),
          valorUnitario: parseFloat($(this).find('.valor-unitario').val()),
          valorTotal: parseFloat($(this).find('.valor-total-data').data('value')),
          unidad: $(this).data('unidad'),
        });
      });

      const extractNumericValue = (text) => {
        const rawValue = text.replace(/[^\d.,-]/g, '');
        if (currentMonedaAbrev === 'CLP$' || currentMonedaAbrev === 'UF') {
          return parseInt(rawValue.replace(/\./g, '').replace(/,/g, '')) || 0;
        } else {
          const normalizedValue = rawValue.replace(/\./g, '').replace(',', '.');
          return parseFloat(normalizedValue) || 0;
        }
      };

      $('#hidden-subtotal').val(extractNumericValue($('#subtotal').text()));
      $('#hidden-impuesto').val(extractNumericValue($('#impuesto').text()));
      $('#hidden-retencion').val(extractNumericValue($('#retencion').text()));
      $('#hidden-propina').val(extractNumericValue($('#propina').text()));
      $('#hidden-total').val(extractNumericValue($('#total').text()));
      $('#hidden-productos').val(JSON.stringify(productos));

      const dt = new DataTransfer();
      selectedFiles.forEach(file => dt.items.add(file));
      $('#orden-archivos')[0].files = dt.files;

      isSubmitting = true;
    });

    function liberarBloqueo() {
      if (isSubmitting) {
        return;
      }
      const encodedId = "<%= solicitud.id %>";
      const url = `/ordenes-liberar-procesamiento/${encodedId}`;
      setTimeout(() => {
        navigator.sendBeacon(url);
      }, 100);
    }

    window.addEventListener("beforeunload", liberarBloqueo);
    window.addEventListener("unload", liberarBloqueo);

    checkDropdowns();
  });
</script>

<%- include('../partials/footer-text') %>
<%- include('../partials/footer') %>
<%- include('../partials/content-wrapper-close') %>

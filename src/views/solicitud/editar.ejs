<%- include('../partials/header', { title: 'Editar Solicitud' }) %>
<%- include('../partials/navbar') %>
<%- include('../partials/sidebar') %>
<%- include('../partials/content-wrapper-open') %>

<div class="content-wrapper">
  <div class="container-xxl flex-grow-1 container-p-y">
    <div class="app-solicitud-editar">
      <!-- Mensajes de éxito y error -->
      <% if (successMessage && successMessage.length > 0) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= successMessage %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
        </div>
      <% } %>
      <% if (errorMessage && errorMessage.length > 0) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= errorMessage %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
        </div>
      <% } %>
      <form
        action="/solicitudes-editar/<%= solicitud.id %>"
        method="POST"
        enctype="multipart/form-data"
        class="needs-validation"
        novalidate
      >
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
          <div class="d-flex flex-column justify-content-center">
            <h4 class="mb-1">Editar Solicitud</h4>
            <p class="mb-0">Modifica los detalles de la solicitud.</p>
          </div>
          <div class="d-flex align-content-center flex-wrap gap-2">
            <a href="/solicitudes" class="btn btn-secondary">
              <i class="fas fa-arrow-left me-1"></i> Regresar
            </a>
            <button type="button" class="btn btn-warning" onclick="clearForm(this)">
              <i class="fas fa-eraser me-1"></i> Cancelar
            </button>
            <button type="submit" class="btn btn-primary">
              <i class="fas fa-save me-1"></i> Guardar Cambios
            </button>
          </div>
        </div>

        <div class="card mb-4">
          <div class="card-header">
            <h5 class="card-title mb-0">Información de la Solicitud</h5>
          </div>
          <div class="card-body">
            <!-- Campo de Asunto -->
            <div class="mb-3">
              <label class="form-label" for="asunto">Asunto <span class="text-danger">*</span></label>
              <input
                type="text"
                class="form-control <%= errors && errors.asunto ? 'is-invalid' : '' %>"
                id="asunto"
                name="asunto"
                value="<%= solicitud.asunto %>"
                required
              />
              <% if (errors && errors.asunto) { %>
                <div class="invalid-feedback"><%= errors.asunto %></div>
              <% } %>
            </div>

            <!-- Campo de Descripción -->
            <div class="mb-3">
              <label class="form-label" for="descripcion">Descripción <span class="text-danger">*</span></label>
              <textarea
                class="form-control <%= errors && errors.descripcion ? 'is-invalid' : '' %>"
                id="descripcion"
                name="descripcion"
                rows="4"
                required
              ><%= solicitud.descripcion %></textarea>
              <% if (errors && errors.descripcion) { %>
                <div class="invalid-feedback"><%= errors.descripcion %></div>
              <% } %>
            </div>

            <!-- Componente de carga de archivos -->
            <div class="mb-3">
              <label class="form-label" for="archivos">Archivos Adjuntos</label>
              <% 
                let archivos = [];
                try {
                  archivos = JSON.parse(solicitud.archivos);
                } catch (e) {
                  console.error("Error al parsear los archivos:", e);
                }
              %>
              <% if (archivos && archivos.length > 0) { %>
                <ul>
                  <% archivos.forEach((archivo) => { %>
                    <li><a href="/uploads/<%= archivo %>" target="_blank"><%= archivo %></a></li>
                  <% }); %>
                </ul>
              <% } else { %>
                <p>No hay archivos adjuntos.</p>
              <% } %>
              <input
                type="file"
                class="form-control mt-3 <%= errors && errors.archivos ? 'is-invalid' : '' %>"
                id="archivos"
                name="archivos"
                accept=".pdf,.jpg,.jpeg,.png,.docx"
                multiple
                onchange="validateFiles(this)"
              />
              <small class="form-text text-muted">
                Formatos permitidos: PDF, JPG, JPEG, PNG, DOCX (máximo 10 archivos y 10 MB en total)
              </small>
              <% if (errors && errors.archivos) { %>
                <div class="invalid-feedback"><%= errors.archivos %></div>
              <% } %>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  // Validación de formularios Bootstrap
  (function () {
    'use strict';
    var forms = document.querySelectorAll('.needs-validation');
    Array.prototype.slice.call(forms).forEach(function (form) {
      form.addEventListener('submit', function (event) {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  })();

  function clearForm(button) {
    const form = button.closest('form');
    if (form) {
      form.reset();
      form.classList.remove('was-validated');
    }
  }

  function validateFiles(input) {
    const maxFiles = 10;
    const maxSizeTotal = 10 * 1024 * 1024; // 10 MB
    const allowedExtensions = ['pdf', 'jpg', 'jpeg', 'png', 'docx'];
    const files = input.files;
    let totalSize = 0;

    if (files.length > maxFiles) {
      alert(`Puedes subir un máximo de ${maxFiles} archivos.`);
      input.value = '';
      return;
    }

    for (const file of files) {
      const fileExtension = file.name.split('.').pop().toLowerCase();
      if (!allowedExtensions.includes(fileExtension)) {
        alert(`El archivo "${file.name}" tiene una extensión no permitida.`);
        input.value = '';
        return;
      }
      totalSize += file.size;
      if (totalSize > maxSizeTotal) {
        alert('El tamaño total de los archivos no puede superar los 10 MB.');
        input.value = '';
        return;
      }
    }
  }
</script>

<%- include('../partials/footer-text') %>
<%- include('../partials/footer') %>
<%- include('../partials/content-wrapper-close') %>
